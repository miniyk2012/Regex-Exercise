
<!-- saved from url=(0035)https://regex.netlify.com/exercises -->
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">

<meta name="generator" content="Docutils 0.12: http://docutils.sourceforge.net/">
<title>Exercises</title>
<style type="text/css">

/*
 * basic.css
 * ~~~~~~~~~
 *
 * Sphinx stylesheet -- basic theme.
 *
 * :copyright: Copyright 2007-2010 by the Sphinx team, see AUTHORS.
 * :license: BSD, see LICENSE for details.
 *
 */

/* -- main layout ----------------------------------------------------------- */

div.clearer {
    clear: both;
}

/* -- relbar ---------------------------------------------------------------- */

div.related {
    width: 100%;
    font-size: 90%;
}

div.related h3 {
    display: none;
}

div.related ul {
    margin: 0;
    padding: 0 0 0 10px;
    list-style: none;
}

div.related li {
    display: inline;
}

div.related li.right {
    float: right;
    margin-right: 5px;
}

/* -- sidebar --------------------------------------------------------------- */

div.sphinxsidebarwrapper {
    padding: 10px 5px 0 10px;
}

div.sphinxsidebar {
    float: left;
    width: 230px;
    margin-left: -100%;
    font-size: 90%;
}

div.sphinxsidebar ul {
    list-style: none;
}

div.sphinxsidebar ul ul,
div.sphinxsidebar ul.want-points {
    margin-left: 20px;
    list-style: square;
}

div.sphinxsidebar ul ul {
    margin-top: 0;
    margin-bottom: 0;
}

div.sphinxsidebar form {
    margin-top: 10px;
}

div.sphinxsidebar input {
    border: 1px solid #98dbcc;
    font-family: sans-serif;
    font-size: 1em;
}

img {
    border: 0;
}

/* -- search page ----------------------------------------------------------- */

ul.search {
    margin: 10px 0 0 20px;
    padding: 0;
}

ul.search li {
    padding: 5px 0 5px 20px;
    background-image: url(file.png);
    background-repeat: no-repeat;
    background-position: 0 7px;
}

ul.search li a {
    font-weight: bold;
}

ul.search li div.context {
    color: #888;
    margin: 2px 0 0 30px;
    text-align: left;
}

ul.keywordmatches li.goodmatch a {
    font-weight: bold;
}

/* -- index page ------------------------------------------------------------ */

table.contentstable {
    width: 90%;
}

table.contentstable p.biglink {
    line-height: 150%;
}

a.biglink {
    font-size: 1.3em;
}

span.linkdescr {
    font-style: italic;
    padding-top: 5px;
    font-size: 90%;
}

/* -- general index --------------------------------------------------------- */

table.indextable {
    width: 100%;
}

table.indextable td {
    text-align: left;
    vertical-align: top;
}

table.indextable dl, table.indextable dd {
    margin-top: 0;
    margin-bottom: 0;
}

table.indextable tr.pcap {
    height: 10px;
}

table.indextable tr.cap {
    margin-top: 10px;
    background-color: #f2f2f2;
}

img.toggler {
    margin-right: 3px;
    margin-top: 3px;
    cursor: pointer;
}

div.modindex-jumpbox {
    border-top: 1px solid #ddd;
    border-bottom: 1px solid #ddd;
    margin: 1em 0 1em 0;
    padding: 0.4em;
}

div.genindex-jumpbox {
    border-top: 1px solid #ddd;
    border-bottom: 1px solid #ddd;
    margin: 1em 0 1em 0;
    padding: 0.4em;
}

/* -- general body styles --------------------------------------------------- */

a.headerlink {
    visibility: hidden;
}

h1:hover > a.headerlink,
h2:hover > a.headerlink,
h3:hover > a.headerlink,
h4:hover > a.headerlink,
h5:hover > a.headerlink,
h6:hover > a.headerlink,
dt:hover > a.headerlink {
    visibility: visible;
}

div.body p.caption {
    text-align: inherit;
}

div.body td {
    text-align: left;
}

.field-list ul {
    padding-left: 1em;
}

.first {
    margin-top: 0 !important;
}

p.rubric {
    margin-top: 30px;
    font-weight: bold;
}

.align-left {
    text-align: left;
}

.align-center {
    clear: both;
    text-align: center;
}

.align-right {
    text-align: right;
}

/* -- sidebars -------------------------------------------------------------- */

div.sidebar {
    margin: 0 0 0.5em 1em;
    border: 1px solid #ddb;
    padding: 7px 7px 0 7px;
    background-color: #ffe;
    width: 40%;
    float: right;
}

p.sidebar-title {
    font-weight: bold;
}

/* -- topics ---------------------------------------------------------------- */

div.topic {
    border: 1px solid #ccc;
    padding: 7px 7px 0 7px;
    margin: 10px 0 10px 0;
}

p.topic-title {
    font-size: 1.1em;
    font-weight: bold;
    margin-top: 10px;
}

/* -- admonitions ----------------------------------------------------------- */

div.admonition {
    margin-top: 10px;
    margin-bottom: 10px;
    padding: 7px;
}

div.admonition dt {
    font-weight: bold;
}

div.admonition dl {
    margin-bottom: 0;
}

p.admonition-title {
    margin: 0px 10px 5px 0px;
    font-weight: bold;
}

div.body p.centered {
    text-align: center;
    margin-top: 25px;
}

/* -- tables ---------------------------------------------------------------- */

table.docutils {
    border: 0;
    border-collapse: collapse;
}

table.docutils td, table.docutils th {
    padding: 1px 8px 1px 5px;
    border-top: 0;
    border-left: 0;
    border-right: 0;
    border-bottom: 1px solid #aaa;
}

table.field-list td, table.field-list th {
    border: 0 !important;
}

table.footnote td, table.footnote th {
    border: 0 !important;
}

th {
    text-align: left;
    padding-right: 5px;
}

table.citation {
    border-left: solid 1px gray;
    margin-left: 1px;
}

table.citation td {
    border-bottom: none;
}

/* -- other body styles ----------------------------------------------------- */

ol.arabic {
    list-style: decimal;
}

ol.loweralpha {
    list-style: lower-alpha;
}

ol.upperalpha {
    list-style: upper-alpha;
}

ol.lowerroman {
    list-style: lower-roman;
}

ol.upperroman {
    list-style: upper-roman;
}

dl {
    margin-bottom: 15px;
}

dd p {
    margin-top: 0px;
}

dd ul, dd table {
    margin-bottom: 10px;
}

dd {
    margin-top: 3px;
    margin-bottom: 10px;
    margin-left: 30px;
}

dt:target, .highlighted {
    background-color: #fbe54e;
}

dl.glossary dt {
    font-weight: bold;
    font-size: 1.1em;
}

.field-list ul {
    margin: 0;
    padding-left: 1em;
}

.field-list p {
    margin: 0;
}

.refcount {
    color: #060;
}

.optional {
    font-size: 1.3em;
}

.versionmodified {
    font-style: italic;
}

.system-message {
    background-color: #fda;
    padding: 5px;
    border: 3px solid red;
}

.footnote:target  {
    background-color: #ffa
}

.line-block {
    display: block;
    margin-top: 1em;
    margin-bottom: 1em;
}

.line-block .line-block {
    margin-top: 0;
    margin-bottom: 0;
    margin-left: 1.5em;
}

.guilabel, .menuselection {
    font-family: sans-serif;
}

.accelerator {
    text-decoration: underline;
}

.classifier {
    font-style: oblique;
}

/* -- code displays --------------------------------------------------------- */

pre {
    overflow: auto;
}

td.linenos pre {
    padding: 5px 0px;
    border: 0;
    background-color: transparent;
    color: #aaa;
}

table.highlighttable {
    margin-left: 0.5em;
}

table.highlighttable td {
    padding: 0 0.5em 0 0.5em;
}

tt.descname {
    background-color: transparent;
    font-weight: bold;
    font-size: 1.2em;
}

tt.descclassname {
    background-color: transparent;
}

tt.xref, a tt {
    background-color: transparent;
    font-weight: bold;
}

h1 tt, h2 tt, h3 tt, h4 tt, h5 tt, h6 tt {
    background-color: transparent;
}

.viewcode-link {
    float: right;
}

.viewcode-back {
    float: right;
    font-family: sans-serif;
}

div.viewcode-block:target {
    margin: -1px -10px;
    padding: 0 10px;
}

/* -- math display ---------------------------------------------------------- */

img.math {
    vertical-align: middle;
}

div.body div.math p {
    text-align: center;
}

span.eqno {
    float: right;
}

/* -- printout stylesheet --------------------------------------------------- */

@media print {
    div.document,
    div.documentwrapper,
    div.bodywrapper {
        margin: 0 !important;
        width: 100%;
    }

    div.sphinxsidebar,
    div.related,
    div.footer,
    #top-link {
        display: none;
    }
}

</style>
<style type="text/css">

/*
 * nature.css_t
 * ~~~~~~~~~~~~
 *
 * Sphinx stylesheet -- nature theme.
 *
 * :copyright: Copyright 2007-2010 by the Sphinx team, see AUTHORS.
 * :license: BSD, see LICENSE for details.
 *
 */
 
/* -- page layout ----------------------------------------------------------- */
 
body {
    font-family: Arial, sans-serif;
    font-size: 100%;
    /*background-color: #111;*/
    color: #555;
    margin: 0;
    padding: 0;
}

div.documentwrapper {
    float: left;
    width: 100%;
}

div.bodywrapper {
    margin: 0 0 0 230px;
}

hr {
    border: 1px solid #B1B4B6;
}
 
div.document {
    background-color: #eee;
}
 
div.body {
    background-color: #ffffff;
    color: #3E4349;
    padding: 0 30px 30px 30px;
    font-size: 0.9em;
}
 
div.footer {
    color: #555;
    width: 100%;
    padding: 13px 0;
    text-align: center;
    font-size: 75%;
}
 
div.footer a {
    color: #444;
    text-decoration: underline;
}
 
div.related {
    background-color: #6BA81E;
    line-height: 32px;
    color: #fff;
    text-shadow: 0px 1px 0 #444;
    font-size: 0.9em;
}
 
div.related a {
    color: #E2F3CC;
}
 
div.sphinxsidebar {
    font-size: 0.75em;
    line-height: 1.5em;
}

div.sphinxsidebarwrapper{
    padding: 20px 0;
}
 
div.sphinxsidebar h3,
div.sphinxsidebar h4 {
    font-family: Arial, sans-serif;
    color: #222;
    font-size: 1.2em;
    font-weight: normal;
    margin: 0;
    padding: 5px 10px;
    background-color: #ddd;
    text-shadow: 1px 1px 0 white
}

div.sphinxsidebar h4{
    font-size: 1.1em;
}
 
div.sphinxsidebar h3 a {
    color: #444;
}
 
 
div.sphinxsidebar p {
    color: #888;
    padding: 5px 20px;
}
 
div.sphinxsidebar p.topless {
}
 
div.sphinxsidebar ul {
    margin: 10px 20px;
    padding: 0;
    color: #000;
}
 
div.sphinxsidebar a {
    color: #444;
}
 
div.sphinxsidebar input {
    border: 1px solid #ccc;
    font-family: sans-serif;
    font-size: 1em;
}

div.sphinxsidebar input[type=text]{
    margin-left: 20px;
}
 
/* -- body styles ----------------------------------------------------------- */
 
a {
    color: #005B81;
    text-decoration: none;
}
 
a:hover {
    color: #E32E00;
    text-decoration: underline;
}
 
div.body h1,
div.body h2,
div.body h3,
div.body h4,
div.body h5,
div.body h6 {
    font-family: Arial, sans-serif;
    background-color: #BED4EB;
    font-weight: normal;
    color: #212224;
    margin: 30px 0px 10px 0px;
    padding: 5px 0 5px 10px;
    text-shadow: 0px 1px 0 white
}
 
div.body h1 { border-top: 20px solid white; margin-top: 0; font-size: 200%; }
div.body h2 { font-size: 150%; background-color: #C8D5E3; }
div.body h3 { font-size: 120%; background-color: #D8DEE3; }
div.body h4 { font-size: 110%; background-color: #D8DEE3; }
div.body h5 { font-size: 100%; background-color: #D8DEE3; }
div.body h6 { font-size: 100%; background-color: #D8DEE3; }
 
a.headerlink {
    color: #c60f0f;
    font-size: 0.8em;
    padding: 0 4px 0 4px;
    text-decoration: none;
}
 
a.headerlink:hover {
    background-color: #c60f0f;
    color: white;
}
 
div.body p, div.body dd, div.body li {
    line-height: 1.5em;
}
 
div.admonition p.admonition-title + p {
    display: inline;
}

div.highlight{
    background-color: white;
}

div.note {
    background-color: #eee;
    border: 1px solid #ccc;
}
 
div.seealso {
    background-color: #ffc;
    border: 1px solid #ff6;
}
 
div.topic {
    background-color: #eee;
}
 
div.warning {
    background-color: #ffe4e4;
    border: 1px solid #f66;
}
 
p.admonition-title {
    display: inline;
}
 
p.admonition-title:after {
    content: ":";
}
 
pre {
    padding: 10px;
    background-color: White;
    color: #222;
    line-height: 1.2em;
    border: 1px solid #C6C9CB;
    font-size: 1.1em;
    margin: 1.5em 0 1.5em 0;
    -webkit-box-shadow: 1px 1px 1px #d8d8d8;
    -moz-box-shadow: 1px 1px 1px #d8d8d8;
}
 
tt {
    background-color: #ecf0f3;
    color: #222;
    /* padding: 1px 2px; */
    font-size: 1.1em;
    font-family: monospace;
}

.viewcode-back {
    font-family: Arial, sans-serif;
}

div.viewcode-block:target {
    background-color: #f4debf;
    border-top: 1px solid #ac9;
    border-bottom: 1px solid #ac9;
}

p {
	margin: 0;
}

ul li dd {
	margin-top: 0;
}

ul li dl {
	margin-bottom: 0;
}

li dl dd {
	margin-bottom: 0;
}

dd ul {
	padding-left: 0;
}

li dd ul {
	margin-bottom: 0;
}

</style>
<style type="text/css"></style></head>
<body>
<div class="document" id="exercises">
 <div class="body">
<h1 class="title">Exercises</h1>


<div class="section" id="validation-exercises">
<h1>Validation Exercises</h1>
<!-- Estimated Time: 5 minutes -->
<div class="section" id="has-vowels">
<h2>Has Vowels</h2>
<!-- Estimated Time: 1 minute -->
<p>Create a function <tt class="docutils literal">has_vowel</tt>, that accepts a string and returns <tt class="docutils literal">True</tt> if the string contains a vowel (a, e, i, o, or u) returns <tt class="docutils literal">False</tt> otherwise.</p>
<p>Your function should work like this:</p>
<pre class="code pycon literal-block"><span class="name"></span><span class="generic prompt">&gt;&gt;&gt; </span><span class="name">has_vowel</span><span class="punctuation">(</span><span class="literal string">"rhythm"</span><span class="punctuation">)</span>
<span class="generic output">False
</span><span class="name"></span><span class="generic prompt">&gt;&gt;&gt; </span><span class="name">has_vowel</span><span class="punctuation">(</span><span class="literal string">"exit"</span><span class="punctuation">)</span>
<span class="generic output">True</span>
</pre>
<div class="hint">
<p class="first admonition-title">Hint</p>
<p class="last">Match objects are always "truthy" and <tt class="docutils literal">None</tt> is always "falsey".  Truthy meas when you convert something to a boolean, it'll be <tt class="docutils literal">True</tt>.</p>
</div>
</div>
<div class="section" id="is-integer">
<h2>Is Integer</h2>
<!-- Estimated Time: 2 minutes -->
<p>Create a function <tt class="docutils literal">is_integer</tt> that accepts a string and returns <tt class="docutils literal">True</tt> if the string represents an integer.</p>
<p>By our definition, an integer:</p>
<ul class="simple">
<li>Consists of 1 or more digits</li>
<li>May optionally begin with <tt class="docutils literal">-</tt></li>
<li>Does not contain any other non-digit characters.</li>
</ul>
<p>Your function should work like this:</p>
<pre class="code pycon literal-block"><span class="name"></span><span class="generic prompt">&gt;&gt;&gt; </span><span class="name">is_integer</span><span class="punctuation">(</span><span class="literal string">""</span><span class="punctuation">)</span>
<span class="generic output">False
</span><span class="name"></span><span class="generic prompt">&gt;&gt;&gt; </span><span class="name">is_integer</span><span class="punctuation">(</span><span class="literal string">" 5"</span><span class="punctuation">)</span>
<span class="generic output">False
</span><span class="name"></span><span class="generic prompt">&gt;&gt;&gt; </span><span class="name">is_integer</span><span class="punctuation">(</span><span class="literal string">"5000"</span><span class="punctuation">)</span>
<span class="generic output">True
</span><span class="name"></span><span class="generic prompt">&gt;&gt;&gt; </span><span class="name">is_integer</span><span class="punctuation">(</span><span class="literal string">"-999"</span><span class="punctuation">)</span>
<span class="generic output">True
</span><span class="name"></span><span class="generic prompt">&gt;&gt;&gt; </span><span class="name">is_integer</span><span class="punctuation">(</span><span class="literal string">"+999"</span><span class="punctuation">)</span>
<span class="generic output">False
</span><span class="name"></span><span class="generic prompt">&gt;&gt;&gt; </span><span class="name">is_integer</span><span class="punctuation">(</span><span class="literal string">"00"</span><span class="punctuation">)</span>
<span class="generic output">True
</span><span class="name"></span><span class="generic prompt">&gt;&gt;&gt; </span><span class="name">is_integer</span><span class="punctuation">(</span><span class="literal string">"0.0"</span><span class="punctuation">)</span>
<span class="generic output">False</span>
</pre>
</div>
<div class="section" id="is-fraction">
<h2>Is Fraction</h2>
<!-- Estimated Time: 3 minutes -->
<p>Create a function <tt class="docutils literal">is_fraction</tt> that accepts a string and returns <tt class="docutils literal">True</tt> if the string represents a fraction.</p>
<p>By our definition a fraction consists of:</p>
<ol class="arabic simple">
<li>An optional <tt class="docutils literal">-</tt> character</li>
<li>Followed by 1 or more digits</li>
<li>Followed by a <tt class="docutils literal">/</tt></li>
<li>Followed by 1 or more digits, at least one of which is non-zero (the denominator cannot be the number <tt class="docutils literal">0</tt>).</li>
</ol>
<p>Your function should work like this:</p>
<pre class="code pycon literal-block"><span class="name"></span><span class="generic prompt">&gt;&gt;&gt; </span><span class="name">is_fraction</span><span class="punctuation">(</span><span class="literal string">""</span><span class="punctuation">)</span>
<span class="generic output">False
</span><span class="name"></span><span class="generic prompt">&gt;&gt;&gt; </span><span class="name">is_fraction</span><span class="punctuation">(</span><span class="literal string">"5000"</span><span class="punctuation">)</span>
<span class="generic output">False
</span><span class="name"></span><span class="generic prompt">&gt;&gt;&gt; </span><span class="name">is_fraction</span><span class="punctuation">(</span><span class="literal string">"-999/1"</span><span class="punctuation">)</span>
<span class="generic output">True
</span><span class="name"></span><span class="generic prompt">&gt;&gt;&gt; </span><span class="name">is_fraction</span><span class="punctuation">(</span><span class="literal string">"+999/1"</span><span class="punctuation">)</span>
<span class="generic output">False
</span><span class="name"></span><span class="generic prompt">&gt;&gt;&gt; </span><span class="name">is_fraction</span><span class="punctuation">(</span><span class="literal string">"00/1"</span><span class="punctuation">)</span>
<span class="generic output">True
</span><span class="name"></span><span class="generic prompt">&gt;&gt;&gt; </span><span class="name">is_fraction</span><span class="punctuation">(</span><span class="literal string">"/5"</span><span class="punctuation">)</span>
<span class="generic output">False
</span><span class="name"></span><span class="generic prompt">&gt;&gt;&gt; </span><span class="name">is_fraction</span><span class="punctuation">(</span><span class="literal string">"5/0"</span><span class="punctuation">)</span>
<span class="generic output">False
</span><span class="name"></span><span class="generic prompt">&gt;&gt;&gt; </span><span class="name">is_fraction</span><span class="punctuation">(</span><span class="literal string">"5/010"</span><span class="punctuation">)</span>
<span class="generic output">True
</span><span class="name"></span><span class="generic prompt">&gt;&gt;&gt; </span><span class="name">is_fraction</span><span class="punctuation">(</span><span class="literal string">"5/105"</span><span class="punctuation">)</span>
<span class="generic output">True
</span><span class="name"></span><span class="generic prompt">&gt;&gt;&gt; </span><span class="name">is_fraction</span><span class="punctuation">(</span><span class="literal string">"5 / 1"</span><span class="punctuation">)</span>
<span class="generic output">False</span>
</pre>
</div>
<div class="section" id="valid-time">
<h2>Valid Time</h2>
<!-- Estimated Time: 2 minutes -->
<p>Create a function that returns <tt class="docutils literal">True</tt> if given a valid 24 hour time in the format HH:MM.</p>
<p>Example usage:</p>
<pre class="code pycon literal-block"><span class="name"></span><span class="generic prompt">&gt;&gt;&gt; </span><span class="name">is_valid_time</span><span class="punctuation">(</span><span class="literal string">"00:19"</span><span class="punctuation">)</span>
<span class="generic output">True
</span><span class="name"></span><span class="generic prompt">&gt;&gt;&gt; </span><span class="name">is_valid_time</span><span class="punctuation">(</span><span class="literal string">"01:37"</span><span class="punctuation">)</span>
<span class="generic output">True
</span><span class="name"></span><span class="generic prompt">&gt;&gt;&gt; </span><span class="name">is_valid_time</span><span class="punctuation">(</span><span class="literal string">"10:60"</span><span class="punctuation">)</span>
<span class="generic output">False
</span><span class="name"></span><span class="generic prompt">&gt;&gt;&gt; </span><span class="name">is_valid_time</span><span class="punctuation">(</span><span class="literal string">"23:59"</span><span class="punctuation">)</span>
<span class="generic output">True
</span><span class="name"></span><span class="generic prompt">&gt;&gt;&gt; </span><span class="name">is_valid_time</span><span class="punctuation">(</span><span class="literal string">"24:00"</span><span class="punctuation">)</span>
<span class="generic output">False</span>
</pre>
</div>
</div>
<div class="section" id="search-exercises">
<h1>Search Exercises</h1>
<!-- Estimated Time: 10 minutes -->
<p>Each of these exercises involves searching in a dictionary.</p>
<p><a class="reference external" href="https://regex.netlify.com/dictionary.txt">You can download the dictionary.txt file here.</a></p>
<p>You can open and read from the dictionary file like this:</p>
<pre class="code python literal-block"><span class="keyword">with</span> <span class="name builtin">open</span><span class="punctuation">(</span><span class="literal string">'dictionary.txt'</span><span class="punctuation">)</span> <span class="keyword">as</span> <span class="name">dict_file</span><span class="punctuation">:</span>
    <span class="name">dictionary</span> <span class="operator">=</span> <span class="name">dict_file</span><span class="operator">.</span><span class="name">read</span><span class="punctuation">()</span>
</pre>
<div class="section" id="tetravocalic">
<h2>Tetravocalic</h2>
<!-- Estimated Time: 2 minutes -->
<p>Find all lowercase words (no proper nouns) that include four consecutive vowels.</p>
<!-- answers:

.. code-block:: pycon

>>> re.findall(r'\b.*[aeiou]{4}.*\b', dictionary)
['aqueous', 'aqueously', 'archaeoastronomies', 'archaeoastronomy', 'assegaaied', 'assegaaiing', 'banlieue', 'banlieues', 'beauish', 'bioaeration', 'bioaerations', 'bioaeronautics', 'blooie', 'booai', 'booais', 'braaied', 'braaiing', 'camaieu', 'camaieux', 'cooee', 'cooeed', 'cooeeing', 'cooees', 'dequeue', 'dequeued', 'dequeueing', 'dequeues', 'dequeuing', 'enqueue', 'enqueued', 'enqueueing', 'enqueues', 'enqueuing', 'epigaeous', 'epopoeia', 'epopoeias', 'euoi', 'euouae', 'euouaes', 'flooie', 'forhooie', 'forhooied', 'forhooieing', 'forhooies', 'giaour', 'giaours', 'gooier', 'gooiest', 'guaiac', 'guaiacol', 'guaiacols', 'guaiacs', 'guaiacum', 'guaiacums', 'guaiocum', 'guaiocums', 'homoiousian', 'homoiousians', 'hypoaeolian', 'hypogaeous', 'looie', 'looies', 'louie', 'louies', 'maieutic', 'maieutical', 'maieutics', 'meoued', 'meouing', 'metasequoia', 'metasequoias', 'miaou', 'miaoued', 'miaouing', 'miaous', 'mythopoeia', 'mythopoeias', 'nonaqueous', 'obsequious', 'obsequiously', 'obsequiousness', 'obsequiousnesses', 'onomatopoeia', 'onomatopoeias', 'palaeoanthropic', 'palaeoecologic', 'palaeoecologies', 'palaeoecologist', 'palaeoecology', 'palaeoethnology', 'pharmacopoeia', 'pharmacopoeial', 'pharmacopoeian', 'pharmacopoeias', 'plateaued', 'plateauing', 'prosopopoeia', 'prosopopoeial', 'prosopopoeias', 'queue', 'queued', 'queueing', 'queueings', 'queuer', 'queuers', 'queues', 'queuing', 'queuings', 'radioautograph', 'radioautographic', 'radioautographies', 'radioautographs', 'radioautography', 'radioiodine', 'radioiodines', 'reliquiae', 'rhythmopoeia', 'rhythmopoeias', 'saouari', 'saouaris', 'scarabaeoid', 'scarabaeoids', 'sequoia', 'sequoias', 'subaqueous', 'tenuious', 'terraqueous', 'toeier', 'toeiest', 'zoaea', 'zoaeae', 'zoaeas', 'zoeae', 'zooea', 'zooeae', 'zooeal', 'zooeas', 'zoogloeae', 'zoogloeoid', 'zooier', 'zooiest'] -->
</div>
<div class="section" id="hexadecimal-words">
<h2>Hexadecimal Words</h2>
<!-- Estimated Time: 2 minutes -->
<p>Find every word that consists solely of the letters A, B, C, D, E, and F.</p>
<p>Examples: decaf, bead, cab</p>
</div>
<div class="section" id="hexaconsonantal">
<h2>Hexaconsonantal</h2>
<!-- Estimated Time: 3 minutes -->
<p>Find at least one word with 6 consecutive consonants.  For this problem treat <tt class="docutils literal">y</tt> as a vowel.</p>
<!-- answers:

.. code-block:: pycon

    >>> re.findall(r'\b.*[^aeiouy\s]{6}.*\b', dictionary)
    ['bergschrund', 'bergschrunds', 'borschts', 'catchphrase', 'catchphrases', 'crwths', 'eschscholtzia', 'eschscholtzias', 'eschscholzia', 'eschscholzias', 'festschrift', 'festschriften', 'festschrifts', 'grrrls', 'latchstring', 'latchstrings', 'lengthsman', 'lengthsmen', 'sightscreen', 'sightscreens', 'tsktsk', 'tsktsked', 'tsktsking', 'tsktsks', 'watchspring', 'watchsprings', 'watchstrap', 'watchstraps', 'weltschmerz', 'weltschmerzes']
    >>> re.findall(r'\b.*[bcdfghjklmnpqrstvwxz]{6}.*\b', dictionary)
    ['bergschrund', 'bergschrunds', 'borschts', 'catchphrase', 'catchphrases', 'crwths', 'eschscholtzia', 'eschscholtzias', 'eschscholzia', 'eschscholzias', 'festschrift', 'festschriften', 'festschrifts', 'grrrls', 'latchstring', 'latchstrings', 'lengthsman', 'lengthsmen', 'sightscreen', 'sightscreens', 'tsktsk', 'tsktsked', 'tsktsking', 'tsktsks', 'watchspring', 'watchsprings', 'watchstrap', 'watchstraps', 'weltschmerz', 'weltschmerzes'] -->
</div>
<div class="section" id="crossword-helper">
<h2>Crossword Helper</h2>
<!-- Estimated Time: 3 minutes -->
<p>Make a function <tt class="docutils literal">possible_words</tt> that accepts a partial word with underscores representing missing letters and returns a list of all possible matches.</p>
<p>Use your crossword helper function to solve the following:</p>
<ol class="arabic simple">
<li>water tank: CIS____</li>
<li>pastry: ___TE</li>
<li>temporary: __A_S_E__</li>
</ol>
</div>
<div class="section" id="repeat-letter">
<h2>Repeat Letter</h2>
<!-- Estimated Time: 2 minutes -->
<p>Find every word with 5 N's.</p>
</div>
</div>
 </div>

</div>



<!-- rst.ninjs.org -->

</body></html>